# main.py
from openai import OpenAI
from dotenv import load_dotenv
import os
import time

# ‡πÇ‡∏´‡∏•‡∏î API Key ‡∏à‡∏≤‡∏Å .env
load_dotenv()
api_key = os.getenv("OPENROUTER_API_KEY")

# ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ OpenRouter
client = OpenAI(
    base_url="https://openrouter.ai/api/v1",
    api_key=api_key,
)

# ‡∏Å‡∏≥‡∏´‡∏ô‡∏î System Prompt (‡∏Ñ‡∏á‡∏ó‡∏µ‡πà‡∏ï‡∏•‡∏≠‡∏î session)
messages = [
    {
        "role": "system",
        "content": (
            "‡∏Ñ‡∏∏‡∏ì‡∏Ñ‡∏∑‡∏≠‡∏ú‡∏π‡πâ‡∏ä‡πà‡∏ß‡∏¢ AI ‡∏ó‡∏µ‡πà‡∏ï‡∏≠‡∏ö‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡πÄ‡∏õ‡πá‡∏ô‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢ "
            "‡πÇ‡∏î‡∏¢‡∏ï‡πâ‡∏≠‡∏á‡∏ï‡∏≠‡∏ö‡πÅ‡∏ö‡∏ö‡∏™‡∏±‡πâ‡∏ô‡πÅ‡∏•‡∏∞‡∏Å‡∏£‡∏∞‡∏ä‡∏±‡∏ö ‡πÑ‡∏°‡πà‡πÄ‡∏Å‡∏¥‡∏ô 2 ‡∏õ‡∏£‡∏∞‡πÇ‡∏¢‡∏Ñ "
            "‡πÅ‡∏•‡∏∞‡πÄ‡∏™‡∏ô‡∏≠‡∏ß‡πà‡∏≤‡∏à‡∏∞‡πÉ‡∏´‡πâ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°‡∏´‡∏≤‡∏Å‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£"
        )
    }
]

print("üü¢ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô Chatbot ‡πÅ‡∏•‡πâ‡∏ß ‡∏û‡∏¥‡∏°‡∏û‡πå 'exit' ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏à‡∏ö\n")

# Loop ‡∏ñ‡∏≤‡∏°-‡∏ï‡∏≠‡∏ö
while True:
    user_input = input("üë§ ‡∏Ñ‡∏∏‡∏ì: ")
    if user_input.lower() in ["exit", "quit", "bye"]:
        print("üëã ‡∏à‡∏ö‡∏Å‡∏≤‡∏£‡∏™‡∏ô‡∏ó‡∏ô‡∏≤")
        break

    # ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏•‡∏á‡πÉ‡∏ô‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°
    messages.append({"role": "user", "content": user_input})

    # ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏à‡∏±‡∏ö‡πÄ‡∏ß‡∏•‡∏≤
    start_time = time.time()

    # ‡∏Ç‡∏≠‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö‡∏à‡∏≤‡∏Å AI
    response = client.chat.completions.create(
        model="qwen/qwen3-8b:free",
        messages=messages
    )

    # ‡∏à‡∏±‡∏ö‡πÄ‡∏ß‡∏•‡∏≤
    end_time = time.time()
    elapsed = end_time - start_time

    # ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö AI ‡∏•‡∏á‡πÉ‡∏ô‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥
    assistant_reply = response.choices[0].message.content.strip()
    messages.append({"role": "assistant", "content": assistant_reply})

    # ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•
    print(f"ü§ñ AI: {assistant_reply}")
    print(f"‚è±Ô∏è {elapsed:.2f} ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ\n")
